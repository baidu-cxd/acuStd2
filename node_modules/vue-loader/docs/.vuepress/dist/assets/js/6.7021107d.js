(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{59:function(s,t,n){"use strict";n.r(t);var a=n(0),o=Object(a.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var s=this,t=s.$createElement,n=s._self._c||t;return n("div",{staticClass:"content"},[n("h1",{attrs:{id:"postcss"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#postcss","aria-hidden":"true"}},[s._v("#")]),s._v(" PostCSS")]),n("p",[s._v("Any CSS output processed by "),n("code",[s._v("vue-loader")]),s._v(" is piped through "),n("a",{attrs:{href:"https://github.com/postcss/postcss",target:"_blank",rel:"noopener noreferrer"}},[s._v("PostCSS")]),s._v(" for scoped CSS rewriting. You can also add custom PostCSS plugins to the process, for example "),n("a",{attrs:{href:"https://github.com/postcss/autoprefixer",target:"_blank",rel:"noopener noreferrer"}},[s._v("autoprefixer")]),s._v(" or "),n("a",{attrs:{href:"http://cssnext.io/",target:"_blank",rel:"noopener noreferrer"}},[s._v("CSSNext")]),s._v(".")]),n("h2",{attrs:{id:"using-a-config-file"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#using-a-config-file","aria-hidden":"true"}},[s._v("#")]),s._v(" Using a Config File")]),n("p",[n("code",[s._v("vue-loader")]),s._v(" supports auto-loading the same PostCss config files supported by "),n("a",{attrs:{href:"https://github.com/postcss/postcss-loader#usage",target:"_blank",rel:"noopener noreferrer"}},[n("code",[s._v("postcss-loader")])]),s._v(":")]),n("ul",[n("li",[n("code",[s._v("postcss.config.js")])]),n("li",[n("code",[s._v(".postcssrc")])]),n("li",[n("code",[s._v("postcss")]),s._v(" field in "),n("code",[s._v("package.json")])])]),n("p",[s._v("Using a config file allows you to share the same config between your normal CSS files processed by "),n("code",[s._v("postcss-loader")]),s._v(" and the CSS inside "),n("code",[s._v("*.vue")]),s._v(" files, and is recommended.")]),n("h2",{attrs:{id:"using-with-postcss-loader"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#using-with-postcss-loader","aria-hidden":"true"}},[s._v("#")]),s._v(" Using with "),n("code",[s._v("postcss-loader")])]),n("p",[s._v("Since "),n("code",[s._v("vue-loader")]),s._v(" handles PostCSS on its styles internally, you only need to apply "),n("code",[s._v("postcss-loader")]),s._v(" to standalone CSS files. There's no need to specify "),n("code",[s._v('lang="postcss"')]),s._v(" on a style block if there is a PostCSS config file in your project.")]),n("p",[s._v("Sometimes the user may want to use "),n("code",[s._v('lang="postcss"')]),s._v(" only for syntax highlighting purposes. Starting in 13.6.0, if no loader has been explicitly configured for the following common PostCSS extensions (via "),n("code",[s._v("vue-loader")]),s._v("'s own "),n("code",[s._v("loaders")]),s._v(" option), they will simply go through "),n("code",[s._v("vue-loader")]),s._v("'s default PostCSS transforms:")]),n("ul",[n("li",[n("code",[s._v("postcss")])]),n("li",[n("code",[s._v("pcss")])]),n("li",[n("code",[s._v("sugarss")])]),n("li",[n("code",[s._v("sss")])])]),n("h2",{attrs:{id:"inline-options"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#inline-options","aria-hidden":"true"}},[s._v("#")]),s._v(" Inline Options")]),n("p",[s._v("Alternatively, you can specify PostCSS config specifically for "),n("code",[s._v("*.vue")]),s._v(" files using the "),n("code",[s._v("postcss")]),s._v(" option for "),n("code",[s._v("vue-loader")]),s._v(".")]),n("p",[s._v("Example:")]),n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{attrs:{class:"token comment"}},[s._v("// webpack.config.js")]),s._v("\nmodule"),n("span",{attrs:{class:"token punctuation"}},[s._v(".")]),s._v("exports "),n("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{attrs:{class:"token comment"}},[s._v("// other options...")]),s._v("\n  module"),n("span",{attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),n("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{attrs:{class:"token comment"}},[s._v("// `module.rules` is the same as `module.loaders` in 1.x")]),s._v("\n    rules"),n("span",{attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),n("span",{attrs:{class:"token punctuation"}},[s._v("[")]),s._v("\n      "),n("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        test"),n("span",{attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),n("span",{attrs:{class:"token regex"}},[s._v("/\\.vue$/")]),n("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n        loader"),n("span",{attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),n("span",{attrs:{class:"token string"}},[s._v("'vue-loader'")]),n("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n        "),n("span",{attrs:{class:"token comment"}},[s._v("// `vue-loader` options goes here")]),s._v("\n        options"),n("span",{attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),n("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n          "),n("span",{attrs:{class:"token comment"}},[s._v("// ...")]),s._v("\n          postcss"),n("span",{attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),n("span",{attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{attrs:{class:"token function"}},[s._v("require")]),n("span",{attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{attrs:{class:"token string"}},[s._v("'postcss-cssnext'")]),n("span",{attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n        "),n("span",{attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n      "),n("span",{attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),n("span",{attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n  "),n("span",{attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),n("p",[s._v("In addition to providing an Array of plugins, the "),n("code",[s._v("postcss")]),s._v(" option also accepts:")]),n("ul",[n("li",[n("p",[s._v("A function that returns an array of plugins;")])]),n("li",[n("p",[s._v("An object that contains options to be passed to the PostCSS processor. This is useful when you are using PostCSS projects that relies on custom parser/stringifiers:")]),n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[s._v("postcss"),n("span",{attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),n("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  plugins"),n("span",{attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),n("span",{attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{attrs:{class:"token operator"}},[s._v("...")]),n("span",{attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{attrs:{class:"token comment"}},[s._v("// list of plugins")]),s._v("\n  options"),n("span",{attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),n("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    parser"),n("span",{attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),n("span",{attrs:{class:"token string"}},[s._v("'sugarss'")]),s._v(" "),n("span",{attrs:{class:"token comment"}},[s._v("// use sugarss parser")]),s._v("\n  "),n("span",{attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])])]),n("h3",{attrs:{id:"disabling-auto-config-file-loading"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#disabling-auto-config-file-loading","aria-hidden":"true"}},[s._v("#")]),s._v(" Disabling Auto Config File Loading")]),n("p",[s._v("In "),n("code",[s._v("13.6.0+")]),s._v(", auto PostCSS config file loading can be disabled by specifying "),n("code",[s._v("postcss.useConfigFile: false")]),s._v(":")]),n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[s._v("postcss"),n("span",{attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),n("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  useConfigFile"),n("span",{attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),n("span",{attrs:{class:"token boolean"}},[s._v("false")]),n("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  plugins"),n("span",{attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),n("span",{attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{attrs:{class:"token comment"}},[s._v("/* ... */")]),n("span",{attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  options"),n("span",{attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),n("span",{attrs:{class:"token punctuation"}},[s._v("{")]),n("span",{attrs:{class:"token comment"}},[s._v("/* ... */")]),n("span",{attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),n("p",[s._v("This allows the PostCSS configuration inside "),n("code",[s._v("*.vue")]),s._v(" files to be entirely controlled by the inline config.")])])}],!1,null,null,null);t.default=o.exports}}]);